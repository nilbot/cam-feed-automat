<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="clr-namespace:Feeder.Common.Controls"
    xmlns:viewModel="clr-namespace:Feeder.ViewModel"
    x:Class="Feeder.App"
    StartupUri="View\MainView.xaml"
    mc:Ignorable="d">

    <Application.Resources>
        <viewModel:ViewModelLocator x:Key="Locator" d:IsDataSource="True" />
        <controls:IsCornerCtrlCornerToRadiusConverter x:Key="IsCornerCtrlCornerToRadiusConverter" />
        <controls:ThicknessToMarginConverter x:Key="ThicknessToMarginConverter" />
        <LinearGradientBrush x:Key="HighlightBrush" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#E8F5FD" Offset="0.0" />
                    <GradientStop Color="#AADAF6" Offset="1.0" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#C2E4F6" Offset="0.1" />
                    <GradientStop Color="#91CCEB" Offset="1.0" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style TargetType="{x:Type controls:ArrowRepeatButton}">
            <Setter Property="Padding" Value="0,0,0,0" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:ArrowRepeatButton}">
                        <Grid Margin="0,0,0,0">
                            <Border x:Name="Border" BorderThickness="1"
                                    CornerRadius="{Binding IsCornerCtrlCorner, ConverterParameter=0x2, Converter={StaticResource IsCornerCtrlCornerToRadiusConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ArrowRepeatButton}}}">
                                <Border x:Name="Shadow" BorderBrush="#88FFFFFF" BorderThickness="1,1,1,1"
                                        CornerRadius="{Binding IsCornerCtrlCorner, ConverterParameter=0x2, Converter={StaticResource IsCornerCtrlCornerToRadiusConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ArrowRepeatButton}}}" />
                            </Border>
                            <!-- Trouble with Microsoft_Windows_Themes:ButtonChrome is that it has a single property 'RoundCorners',
                        which is either True or False. When set to False, left hand side of button is right angled, while right
                        hand side is slightly rounded. We want to be able to choose which corner is rounded and which is not.
                            <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" SnapsToDevicePixels="False" ClipToBounds="True"
                                                               HorizontalAlignment="Stretch" 
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}" 
                                                               RenderPressed="{TemplateBinding IsPressed}"
                                                               RoundCorners="False"/>-->
                            <Path x:Name="Arrow" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Margin="-1,2,0,0" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#3C7FB1" />
                                <Setter TargetName="Border" Property="Background"
                                        Value="{StaticResource HighlightBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#2C628B" />
                                <Setter TargetName="Shadow" Property="BorderThickness" Value="1,1,0,0" />
                                <Setter TargetName="Shadow" Property="BorderBrush" Value="#44000000" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Shadow" Property="BorderThickness" Value="0" />
                                <Setter TargetName="Border" Property="Background" Value="#F4F4F4" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#00000000" />
                                <Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
                            </Trigger>
                            <Trigger Property="ButtonArrowType" Value="Down">
                                <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 3.5 4 L 7 0 Z" />
                            </Trigger>
                            <Trigger Property="ButtonArrowType" Value="Up">
                                <Setter TargetName="Arrow" Property="Data" Value="M 0 2 L 3.5 -2 L 7 2 Z" />
                            </Trigger>
                            <Trigger Property="ButtonArrowType" Value="Left">
                                <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 4 3.5 L 4 -3.5 Z" />
                            </Trigger>
                            <Trigger Property="ButtonArrowType" Value="Right">
                                <Setter TargetName="Arrow" Property="Data" Value="M 0 3.5 L 4 0 L 0 -3.5 Z" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type controls:NumericUpDown}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:NumericUpDown}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <controls:ArrowRepeatButton Grid.Row="0" x:Name="Part_UpButton" ButtonArrowType="Up"
                                                        IsCornerCtrlCorner="False,True,False,False"
                                                        VerticalAlignment="Center" />
                            <controls:ArrowRepeatButton Grid.Row="1" x:Name="Part_DownButton" ButtonArrowType="Down"
                                                        IsCornerCtrlCorner="False,False,True,False"
                                                        VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ElipseButtonStyle" TargetType="{x:Type controls:MultiStateButtonBase}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:MultiStateButtonBase}">
                        <Grid DataContext="{Binding Source={StaticResource Locator}}">
                            <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Ellipse Fill="{Binding Main.CameraMissionControlButtonBackground}" Width="100"
                                         Height="100" />
                            </Viewbox>
                            <ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True" />
                            <Trigger Property="IsPressed" Value="True" />
                            <Trigger Property="IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>

</Application>